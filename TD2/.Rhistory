lims <- c(min(menu.cr),max(menu.cr))
plot3d(menu.cr, type = "s", xlim = lims, ylim = lims,zlim = lims)
#Représentation de l'ellispe de concentration
menu.cr_df <- as.data.frame(menu.cr)
plot3d(menu.cr, type = "s", xlim = lims, ylim = lims,zlim = lims)
plot3d(ellipse3d(cor(cbind(menu.cr_df$Calories, menu.cr_df$Total.Fat,menu.cr_df$Cholesterol))), col="grey",add=TRUE)
install.packages("rgl")
#Installation du package ade4 pour réaliser l'ACP
install.packages("ade4")
library("ade4")
#Utilisation de dudi.pca pour réaliser l'ACP
list <- c("Calories","Total.Fat","Cholesterol")
acp <- dudi.pca(menu[, list], center=TRUE, scale=TRUE, scannf = FALSE, nf = 3)
names(acp)
#Mise à l'échelle entre le scale et dudi.pca
var.n <- function(x) sum((x-mean(x))^2)/length(x)
scale.n <- function(x) (x - mean(x))/sqrt(var.n(x))
head(apply(menu.cr, 2, scale.n))
summary(menu.cr)
summary(acp$tab)
#Import des données au format csv
menu <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/menu.csv")
menu <- as.data.frame(menu)
summary(menu)
#Intallation du package MVN
install.packages("MVN")
library(MVN)
#Détermination de la loi normale bivariée entre deux variables
couple_to_test <- c("Calories", "Total.Fat")
result = mvn(menu[couple_to_test], mvnTest = "mardia", univariateTest = "SW", univariatePlot = "histogram", multivariatePlot = "qq", multivariateOutlierMethod = "adj", showOutliers = TRUE, showNewData = TRUE)
#Test de corrélation linéaire de Pearson
cor.test(menu$Calories, menu$Total.Fat)
#Séparation du Dataframe menu
donnes_separees <- c("Calories", "Total.Fat", "Cholesterol", "Sodium", "Sugars", "Protein")
indices <- which(colnames(menu) %in% donnes_separees)
new_menu <- menu[,indices]
summary(new_menu)
#Affichage de la matrice de corrélation
correlation_mat <- cor(new_menu)
da <- c("Calories", "Total.Fat","Cholesterol","Sodium","Sugars","Protein")
m1 <- matrix(nrow = 6, ncol = 6)
dimnames(m1) <- list(da, da)
m1
#Remplissage de la matrice de corrélation
for (i in 0:36) {
m1[i] <- correlation_mat[i]
}
m1
## Representation en 3D des trois variables : Calories, Total.Fat, Cholesterol
install.packages ("rgl")
library(rgl)
plot3d(menu$Calories, menu$Total.Fat,menu$Cholesterol, type="s")
#Centrer les données avec scale et les réduire
list <- c("Calories", "Total.Fat", "Cholesterol")
menu.cr <- scale(menu[, list])
lims <- c(min(menu.cr),max(menu.cr))
plot3d(menu.cr, type = "s", xlim = lims, ylim = lims,zlim = lims)
#Représentation de l'ellispe de concentration
menu.cr_df <- as.data.frame(menu.cr)
plot3d(menu.cr, type = "s", xlim = lims, ylim = lims,zlim = lims)
plot3d(ellipse3d(cor(cbind(menu.cr_df$Calories, menu.cr_df$Total.Fat,menu.cr_df$Cholesterol))), col="grey",add=TRUE)
#Installation du package ade4 pour réaliser l'ACP
install.packages("ade4")
library("ade4")
#Utilisation de dudi.pca pour réaliser l'ACP
list <- c("Calories","Total.Fat","Cholesterol")
acp <- dudi.pca(menu[, list], center=TRUE, scale=TRUE, scannf = FALSE, nf = 3)
names(acp)
#Mise à l'échelle entre le scale et dudi.pca
var.n <- function(x) sum((x-mean(x))^2)/length(x)
scale.n <- function(x) (x - mean(x))/sqrt(var.n(x))
head(apply(menu.cr, 2, scale.n))
summary(menu.cr)
summary(acp$tab)
install.packages("ade4")
#Import des données
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2/Presidents12.csv")
#Import des données au format csv
menu <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/menu.csv")
#Import des données
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2/Presidents12.csv")
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
setwd
setwd
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2/Presidents12.csv")
presidents12 <- as.data.frame(menu)
summary(presidents12)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2/Presidents12.csv")
presidents12 <- as.data.frame(menu)
summary(presidents12)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp")
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2/Presidents12.csv")
presidents12 <- as.data.frame(menu)
summary(presidents12)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2/Presidents12.csv")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/TD2/Presidents12.csv")
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/TD2/Presidents12.csv")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/TD2/President12.csv")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(menu)
summary(presidents12)
presidents12 <- as.data.frame(presidents12)
summary(presidents12)
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12)
summary(presidents12)
head(presidents12)
d2 <- presidents12(r1= row.names(Num.DÃ.partement), Num.DÃ.partement, row.names=NULL)
d2 <- data.frame(r1= row.names(Num.DÃ.partement), Num.DÃ.partement, row.names=NULL)
d2 <- data.frame(r1= row.names(ï..Num.DÃ.partement), ï..Num.DÃ.partement, row.names=NULL)
d2 <- data.frame.(row.names=2)
d2 <- data.frame(row.names=2)
head(d2)
d2 <- data.frame(row.names="Departements")
head(d2)
d2 <- data.frame(presidents12, row.names="Departements")
d2 <- data.frame(presidents12, row.names=2)
d2 <- data.frame(presidents12, row.names="Départements)
head(d2)
d2 <- data.frame(presidents12, row.names="Départements)
head(d2)
summary(d2)
presidents12 <- as.data.frame(presidents12, row_names=1)
summary(presidents12)
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", row_names=1)
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", row.names=1)
summary(presidents12)
presidents12 <- as.data.frame
summary(presidents12)
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", row.names=1)
presidents12 <- as.data.frame
summary(presidents12)
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12, row.names=1)
summary(presidents12)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12, row.names="Départements")
summary(presidents12)
presidents12 <- as.data.frame(presidents12, row.names="Département")
row.names(presidents12) <- Départements
row.names(presidents12) <- Département
row.names(presidents12) <- "Département"
row.names(presidents12, value = "Département")
row.names(presidents12, value = "2")
row.names(presidents12, value = Département)
presidents12 <- cbind(Row.Names = rownames(presidents12), presidents12)
presidents12
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
names(dimnames(presidents12)) <- c("Départements", "")
myMat
head(presidents12)
names(dimnames(presidents12)) <- c("Départements")
head(presidents12)
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
rownames(presidents12) <- NULL
presidents12
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12)
rownames(presidents12) <- NULL
presidents12
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12)
row.names(presidents12) <- c("Département")
presidents12
row.names
row.names
presidents12 <- as.data.frame(presidents12)
row.names(presidents12) <- ("Département")
presidents12
presidents12 <- read.csv("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12,row.names = NULL)
row.names(presidents12) <- ("Département")
presidents12 <- as.data.frame(presidents12,row.names = NULL)
presidents12
presidents12 <- as.data.frame(presidents12, row.names = 1)
presidents12
presidents12 <- as.data.frame(presidents12, row.names = NULL)
presidents12
presidents12 <- as.data.frame(presidents12, row.names = Département)
presidents12 <- as.data.frame(presidents12, row.names = "Département")
presidents12
presidents12 <- as.data.frame(presidents12, row.names = "Département")
presidents12 <- as.data.frame(presidents12, row.names = "Département")
presidents12
row.names(presidents = Départements)
row.names(presidents = "Départements")
row.names(presidents)
presidents12
presidents12 <- as.data.frame(presidents12, row.names = Départements )
presidents12 <- as.data.frame(presidents12, row.names = Département )
presidents12 <- as.data.frame(presidents12, row.names = "Département" )
row.names(presidents12) <- Département
row.names(presidents12) <- "Département"
row.names(presidents12) <- c("Département")
row.names(presidents12) <- c(presidents12$Département)
presidents12
presidents12$ï..Num.DÃ.partement.EvaJoly.Marine.Le.Pen.Nicolas.Sarkozy.Jean.Luc.MÃ.lenchon.Philippe.Poutou.Nathalie.Arthaud.Jacques.Cheminade.FranÃ.ois.Bayrou.Nicolas.Dupont.Aignan.FranÃ.ois.Hollande.TotCand
presidents12$ï..Num.DÃ.partement.EvaJoly.Marine.Le.Pen.Nicolas.Sarkozy.Jean.Luc.MÃ.lenchon.Philippe.Poutou.Nathalie.Arthaud.Jacques.Cheminade.FranÃ.ois.Bayrou.Nicolas.Dupont.Aignan.FranÃ.ois.Hollande.TotCand
presidents12$ï..Num.DÃ.partement
presidents12$ï..Num
presidents12$DÃ.partement
presidents12$ï..DÃ.partement
presidents12$ïDÃ.partement
presidents12$partement
presidents12$ï..Num.DÃ.partement
presidents12$ï..Num.DÃ.partement.EvaJoly.Marine.Le.Pen.Nicolas.Sarkozy.Jean.Luc.MÃ.lenchon.Philippe.Poutou.Nathalie.Arthaud.Jacques.Cheminade.FranÃ.ois.Bayrou.Nicolas.Dupont.Aignan.FranÃ.ois.Hollande.TotCand
presidents12$Num.DÃ.partement
presidents12 <- as.data.frame(presidents12)
, row.names = "Département"
presidents12 <- as.data.frame(presidents12, row.names = "Département" )
presidents12[0]
presidents12[1]
presidents12[0]
View(presidents12)
View(presidents12)
presidents12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv")
presidents12 <- as.data.frame(presidents12, row.names = "Département" )
presidents12 <- as.data.frame(presidents12)
View(presidents12)
View(presidents12)
presidents12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF8")
View(presidents12)
View(presidents12)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
presidents12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF8")
presidents12 <- as.data.frame(presidents12)
View(presidents12)
View(presidents12)
presidents12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8")
presidents12 <- as.data.frame(presidents12)
View(presidents12)
View(presidents12)
presidents12 <- as.data.frame(presidents12, row_names = "Département")
presidents12
View(presidents12)
View(presidents12)
presidents12 <- as.data.frame(presidents12, row_names = "Département")
presidents12
presidents12 <- as.data.frame(presidents12, row.names = "Département")
row.names(presidents12) <- c("Département")
row.names(presidents12) <- c(presidents12, "Département")
presidents12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=1)
presidents12 <- as.data.frame(presidents12)
presidents12
View(presidents12)
View(presidents12)
barplot(as.matrix(president12[1,2:11]),names.arg=colnames(president12)[2:11],
col="purple3", border="white", main="Ain", horiz=T, las=1,
xlab="nombre de voix", cex.lab=1.2)
barplot(as.matrix(president12[1,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Ain", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
barplot(as.matrix(president12[1,2:11]),names.arg=colnames(presidents12)[2:11],col="purple3", border="white", main="Ain", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=1)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
barplot(as.matrix(president12[1,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Ain", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
barplot(as.matrix(president12[1,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
barplot(as.matrix(president12[67,75,93,84,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,2))
barplot(t(pres12)[1:10, 68]/sum(t(pres12)[1:10, 68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)#barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
barplot(t(president12)[1:10, 68]/sum(t(president12)[1:10, 68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)#barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(t(president12)[1:10, 68]/sum(t(president12)[1:10, 68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(t(president12)[68, 2:11]/sum(t(president12)[68,2:11]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(t(president12)[67, 2:11]/sum(t(president12)[67,2:11]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
par(mar=c(5,10,4,2), mfrow=c(2,2))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,2))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,3))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(2,2))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,2))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,4))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,1))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[93,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[84,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(2,2))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[93,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[84,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,2))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[93,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[84,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
par(mar=c(5,10,4,2), mfrow=c(1,1))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[93,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=2)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
par(mar=c(5,10,4,2), mfrow=c(1,1))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[93,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[84,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
View(presidents12)
View(presidents12)
View(president12)
View(president12)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=2)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
View(presidents12)
View(president12)
View(president12)
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=2)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
presidents12
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=2)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
View(president12)
View(presidents12)
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=3)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
View(president12)
View(presidents12)
View(president12)
clear
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=2)
#Convertion en DataFrame
president12 <- as.data.frame(presidents12)
View(president12)
View(presidents12)
View(president12)
View(presidents12)
View(president12)
View(presidents12)
View(president12)
View(presidents12)
View(president12)
View(presidents12)
View(president12)
#Row_names=1 nous permet d'afficher nos départements en nom de ligne
president12 <- read.csv2("C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_Visualisation_tp/TD2/President12.csv", encoding = "UTF-8", row.names=2)
#Convertion en DataFrame
president12 <- as.data.frame(president12)
View(president12)
par(mar=c(5,10,4,2), mfrow=c(1,1))
#Affichage les nombres de voix obtenues par les différents candidats dans le département du Bas-Rhin
barplot(as.matrix(president12[67,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Bas-Rhin", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Paris
barplot(as.matrix(president12[75,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Paris", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[93,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
#Affichage les nombres de voix obtenues par lesdifférents candidats dans le département de Seine-Saint-Denis
barplot(as.matrix(president12[84,2:11]),names.arg=colnames(president12)[2:11],col="purple3", border="white", main="Seine-Saint-Denis", horiz=T, las=1,xlab="nombre de voix", cex.lab=1.2)
barplot(t(pres12)[1:10, 67]/sum(t(pres12)[1:10, 67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:10, 67]/sum(t(president12)[1:10, 67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[67, 2:11]/sum(t(president12)[67, 2:11]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
#Import des données
setwd(dir = "C:/Users/Rudyl/Desktop/ESIEA/Cours_5A/Data_Visualisation/Data_visualisation_tp/TD2")
barplot(t(president12)[67, 2:10]/sum(t(president12)[67, 2:10]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[67, 2:10]/sum(t(president12)[67, 2:10]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
t(president12)
barplot(t(president12)[2:11, 67]/sum(t(president12)[2:11,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:8, 67]/sum(t(president12)[2:11,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:8, 67]/sum(t(president12)[1:8,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:8, 67]/sum(t(president12)[1:8,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
transpose <- t(president12)
View(transpose)
barplot(t(president12)[67, 1:10]/sum(t(president12)[67, 1:10]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[67, 1:9]/sum(t(president12)[67, 1:9]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:10, 67]/sum(t(president12)[1:10,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:10, 67]/sum(t(president12)[1:10,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[2:10, 67]/sum(t(president12)[2:10,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(transpose[2:10, 67]/sum(transpose[2:10,67]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
president12[67]
president12["Bas-Rhin"]
View(transpose)
View(transpose)
barplot(transpose[2:10, 66]/sum(transpose[2:10,66]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(transpose[2:10, 68]/sum(transpose[2:10,68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:10, 68]/sum(t(president12)[1:10, 68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(t(president12)[1:10, 68]/sum(t(president12)[1:10, 68]),border="white", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
sum(t(president12)[1:10, 68])
aggregate(. ~ color, csv, sum)
aggregate(. ~ color, president12, sum)
barplot(t(president12)[1:10, 68]/sum(t(president12)[1:10, 68]), xlab="Bas-Rhin", cex.lab=1.5, las=1)
sum(t(president12)[1:10, 68])
sum(transpose[1:10, 68])
#Tableau de fréquences pour le Bas Rhin
transpose <- t(president12[67])
#Tableau de fréquences pour le Bas Rhin
transpose <- t(president12[67,2:11])
#Tableau de fréquences pour le Bas Rhin
transpose <- t(president12[66,2:11])
#Tableau de fréquences pour le Bas Rhin
transpose <- t(president12[68,2:11])
sum(transpose)
barplot(t(president12)[1:10, 68]/sum(transpose), xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(transpose)/sum(transpose), xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot((transpose)/sum(transpose), xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot((transpose)/sum(transpose),horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot((transpose)/sum(transpose),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot((transpose)/sum(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(transpose)/sum(as.matrix(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(transpose)/sum(as.matrix(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1))
barplot(as.matrix(transpose[2:10, 68]/sum(transpose[2:10,68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(transpose)/sum(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(transpose[2:10, 68]/sum(transpose[2:10,68]),border="white", col="blue4", horiz=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot((transpose)/sum(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1))
barplot((transpose)/sum(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1))
barplot((transpose)/sum(transpose),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(president12[68,2:11]/sum(president12[68,2:11]),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(t(president12[68,2:11])/sum(as.matrix(t(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(t(president12[68,2:11])/sum(as.matrix(t(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1))
barplot(as.matrix(t(president12[68,2:11]))/sum(as.matrix(t(president12[68,2:11]))),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1, xlim = as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11]) )
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1, xlim = as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
par(mar=c(5,10,4,2), mfrow=c(1,2))
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
par(mar=c(5,10,4,2), mfrow=c(1,1))
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(t((president12[68,2:11]))/sum(as.matrix(t(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(t(president12[68,2:11])))/sum(as.matrix(t(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(t(president12[68,2:11])))/sum(as.matrix(t(president12[68,2:11]))),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(t(president12[68,2:11]))/sum(as.matrix(t(president12[68,2:11]))),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
barplot(as.matrix(president12[68,2:11])/sum(as.matrix(president12[68,2:11])),horiz = TRUE,border="white", col="blue4", beside=T, xlab="Bas-Rhin", cex.lab=1.5, las=1)
